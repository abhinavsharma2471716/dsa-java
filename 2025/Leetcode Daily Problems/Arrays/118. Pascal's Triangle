Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

[[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

 

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]
 

Constraints:

1 <= numRows <= 30

Code:

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<Integer> curr = new ArrayList<>();
        List<List<Integer>> res  = new ArrayList<>();
        curr.add(1);
        res.add(curr);
        while(numRows - 1 != 0){
            List<Integer> next = new ArrayList<>();
            next.add(1);

            int n = curr.size();
            for(int i=1;i<n;i++){
                next.add(curr.get(i-1) + curr.get(i));
            }

            next.add(1);

            curr = next;
            res.add(curr);
            numRows--;
        }

        return res;
    }
}
