Given a string s consisting only of characters a, b and c.

Return the number of substrings containing at least one occurrence of all these characters a, b and c.

 

Example 1:

Input: s = "abcabc"
Output: 10
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "abc", "abca", "abcab", "abcabc", "bca", "bcab", "bcabc", "cab", "cabc" and "abc" (again). 
Example 2:

Input: s = "aaacb"
Output: 3
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "aaacb", "aacb" and "acb". 
Example 3:

Input: s = "abc"
Output: 1
 

Constraints:

3 <= s.length <= 5 x 10^4
s only consists of a, b or c characters.

Code:

class Solution {
    public int numberOfSubstrings(String s) {
        int start = 0;
        int count = 0;
        HashMap<Character, Integer> freq = new HashMap<>();
        for(int end = 0;end < s.length();end++){
            char c = s.charAt(end);
            freq.put(c, freq.getOrDefault(c,0)+1);
            
            while(freq.size() == 3){
                count += s.length() - end;
                char f = s.charAt(start);
                freq.put(f, freq.get(f) - 1);
                if(freq.get(f)==0){
                    freq.remove(f);
                }
                start++;
            }
        }
        return count;
    }
}
