You are given a positive integer n.

Return the integer obtained by removing all zeros from the decimal representation of n.

 

Example 1:

Input: n = 1020030

Output: 123

Explanation:

After removing all zeros from 1020030, we get 123.

Example 2:

Input: n = 1

Output: 1

Explanation:

1 has no zero in its decimal representation. Therefore, the answer is 1.

 

Constraints:

1 <= n <= 10^15

Code :

Approach 1:

class Solution {
    public long removeZeros(long n) {
        long result = 0;
        long place = 1;

        while (n > 0) {
            long digit = n % 10;
            n /= 10;

            if (digit != 0) {
                result += digit * place;
                place *= 10;
            }
        }

        return result;
    }
}


Approach 2:

class Solution {
    public long removeZeros(long n) {
        String s = String.valueOf(n);
        StringBuilder sb = new StringBuilder();
        
        for (char c : s.toCharArray()) {
            if (c != '0') {
                sb.append(c);
            }
        }
        
        return Long.parseLong(sb.toString());
    }
}
